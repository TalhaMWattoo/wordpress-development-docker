---
version: "3.6"
services:
  # NginX reverse proxy:
  nginx:
    container_name: "nginx-router-wordpress"
    image: jwilder/nginx-proxy
    ports:
      - "127.0.0.1:80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - "./config/yoastnginx.conf:/etc/nginx/conf.d/yoastnginx.conf"

  # Mailhog:
  mailhog:
    container_name: "mailhog-wordpress"
    image: mailhog/mailhog
    # logging:
    #   driver: none  # disable saving logs to prevent bloat
    ports:
      - 127.0.0.1:8025:8025 # web ui

  # base database:
  base-database:
    image: ${LOCAL_DB_TYPE-mysql}:${LOCAL_DB_VERSION-5.7.25}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    healthcheck:
      # needs to work for both MySQL and mariaDB
      test:
        [
          "CMD-SHELL",
          "mysqladmin -u $$MYSQL_USER -p$$MYSQL_PASSWORD  ping -P 3306 -h $$(hostname) | grep -q 'mysqld is alive'"
        ]
      interval: 1s
      timeout: 10s
      retries: 1200

  # Basic WordPress:
  basic-database:
    extends:
      service: base-database
    container_name: "wordpress-basic-database"
    ports:
      - "1987:3306"
    environment:
      VIRTUAL_HOST: ${BASIC_DATABASE_HOST:-basic-database.wordpress.test}
    volumes:
      - "basic-database-data:/var/lib/mysql"

  basic-wordpress:
    container_name: "basic-wordpress"
    depends_on:
      nginx:
        condition: service_started
      mailhog:
        condition: service_started
      basic-database:
        condition: service_healthy
    build:
      context: "./containers/wordpress"
      args:
        - GID=${GID:-1000}
        - UID=${UID:-1000}
        - SEED_FILE=basic-wordpress-seed.sh
    restart: always
    expose:
      - 80
    environment:
      ADMIN_USERNAME: admin
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin
      SITE_TITLE: Basic
      SITE_URL: ${BASIC_HOST:-basic.wordpress.test}
      VIRTUAL_HOST: ${BASIC_HOST:-basic.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-basic-database
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
    volumes:
      - ~/.composer/auth.json:/var/www/.composer/auth.json:ro
      - "./wordpress:/var/www/html"
      - "./plugins:/var/www/html/wp-content/plugins"
      - "./xdebug:/var/xdebug"
      - "./config/php.ini:/usr/local/etc/php/conf.d/custom.ini"
    labels:
      - com.yoast.plugin-development-docker.mainwpinstance

  # WooCommerce WordPress:
  woocommerce-database:
    extends:
      service: base-database
    container_name: "wordpress-woocommerce-database"
    ports:
      - "1988:3306"
    environment:
      VIRTUAL_HOST: ${WOOCOMMERCE_DATABASE_HOST:-woocommerce-database.wordpress.test}
    volumes:
      - "woocommerce-database-data:/var/lib/mysql"

  woocommerce-wordpress:
    container_name: "woocommerce-wordpress"
    depends_on:
      nginx:
        condition: service_started
      mailhog:
        condition: service_started
      woocommerce-database:
        condition: service_healthy
    build:
      context: "./containers/wordpress"
      args:
        - GID=${GID:-1000}
        - UID=${UID:-1000}
        - SEED_FILE=woocommerce-wordpress-seed.sh
    restart: always
    expose:
      - 80
    environment:
      ADMIN_USERNAME: admin
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin
      SITE_TITLE: WooCommerce
      SITE_URL: ${WOOCOMMERCE_HOST:-woocommerce.wordpress.test}
      VIRTUAL_HOST: ${WOOCOMMERCE_HOST:-woocommerce.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-woocommerce-database
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
    volumes:
      - ~/.composer/auth.json:/var/www/.composer/auth.json:ro
      - "./wordpress:/var/www/html"
      - "./plugins:/var/www/html/wp-content/plugins"
      - "./xdebug:/var/xdebug"
      - "./config/php.ini:/usr/local/etc/php/conf.d/custom.ini"
    labels:
      - com.yoast.plugin-development-docker.mainwpinstance

  # Multisite WordPress:
  multisite-database:
    extends:
      service: base-database
    container_name: "wordpress-multisite-database"
    ports:
      - "1989:3306"
    environment:
      VIRTUAL_HOST: ${MULTISITE_DATABASE_HOST:-multisite-database.wordpress.test}
    volumes:
      - "multisite-database-data:/var/lib/mysql"

  multisite-wordpress:
    container_name: "multisite-wordpress"
    depends_on:
      nginx:
        condition: service_started
      mailhog:
        condition: service_started
      multisite-database:
        condition: service_healthy
    build:
      context: "./containers/wordpress"
      args:
        - GID=${GID:-1000}
        - UID=${UID:-1000}
        - SEED_FILE=multisite-wordpress-seed.sh
    restart: always
    expose:
      - 80
    environment:
      ADMIN_USERNAME: admin
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin
      SITE_TITLE: multisite
      SITE_URL: ${MULTISITE_HOST:-multisite.wordpress.test}
      VIRTUAL_HOST: ${MULTISITE_HOST:-multisite.wordpress.test},test.${MULTISITE_HOST:-multisite.wordpress.test},translate.${MULTISITE_HOST:-multisite.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-multisite-database
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
    volumes:
      - ~/.composer/auth.json:/var/www/.composer/auth.json:ro
      - "./wordpress:/var/www/html"
      - "./plugins:/var/www/html/wp-content/plugins"
      - "./config/multisite.htaccess:/var/www/html/.htaccess"
      - "./xdebug:/var/xdebug"
      - "./config/php.ini:/usr/local/etc/php/conf.d/custom.ini"
    labels:
      - com.yoast.plugin-development-docker.mainwpinstance

  # Multisite WordPress using Subdomains:
  multisitedomain-database:
    extends:
      service: base-database
    container_name: "wordpress-multisitedomain-database"
    ports:
      - "1991:3306"
    environment:
      VIRTUAL_HOST: ${MULTISITE_DATABASE_HOST:-multisite-database.wordpress.test}
    volumes:
      - "multisitedomain-database-data:/var/lib/mysql"

  multisitedomain-wordpress:
    container_name: "multisitedomain-wordpress"
    depends_on:
      nginx:
        condition: service_started
      mailhog:
        condition: service_started
      multisitedomain-database:
        condition: service_healthy
    build:
      context: "./containers/wordpress"
      args:
        - GID=${GID:-1000}
        - UID=${UID:-1000}
        - SEED_FILE=multisitedomain-wordpress-seed.sh
    restart: always
    expose:
      - 80
    environment:
      ADMIN_USERNAME: admin
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin
      SITE_TITLE: multisite
      SITE_URL: ${MULTISITE_HOST:-multisite.wordpress.test}
      VIRTUAL_HOST: ${MULTISITE_HOST:-multisite.wordpress.test},test.${MULTISITE_HOST:-multisite.wordpress.test},translate.${MULTISITE_HOST:-multisite.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-multisitedomain-database
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
    volumes:
      - ~/.composer/auth.json:/var/www/.composer/auth.json:ro
      - "./wordpress:/var/www/html"
      - "./plugins:/var/www/html/wp-content/plugins"
      - "./config/multisite.htaccess:/var/www/html/.htaccess"
      - "./xdebug:/var/xdebug"
      - "./config/php.ini:/usr/local/etc/php/conf.d/custom.ini"
    labels:
      - com.yoast.plugin-development-docker.mainwpinstance

  # Standalone WordPress:
  standalone-database:
    extends:
      service: base-database
    container_name: "wordpress-standalone-database"
    ports:
      - "1990:3306"
    environment:
      VIRTUAL_HOST: ${STANDALONE_DATABASE_HOST:-standalone-database.wordpress.test}
    volumes:
      - "standalone-database-data:/var/lib/mysql"

  standalone-wordpress:
    container_name: "standalone-wordpress"
    depends_on:
      nginx:
        condition: service_started
      mailhog:
        condition: service_started
      standalone-database:
        condition: service_healthy
    build:
      context: "./containers/wordpress"
      args:
        - GID=${GID:-1000}
        - UID=${UID:-1000}
        - SEED_FILE=standalone-wordpress-seed.sh
    restart: always
    expose:
      - 80
    environment:
      ADMIN_USERNAME: admin
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin
      SITE_TITLE: Standalone
      SITE_URL: ${STANDALONE_HOST:-standalone.wordpress.test}
      VIRTUAL_HOST: ${STANDALONE_HOST:-standalone.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-standalone-database
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
    volumes:
      - ~/.composer/auth.json:/var/www/.composer/auth.json:ro
      - "./wordpress:/var/www/html"
      - "./sa-plugins:/var/www/html/wp-content/plugins"
      - "./xdebug:/var/xdebug"
      - "./config/php.ini:/usr/local/etc/php/conf.d/custom.ini"

  # Nightly WordPress:
  nightly-database:
    extends:
      service: base-database
    container_name: "wordpress-nightly-database"
    ports:
      - "1992:3306"
    environment:
      VIRTUAL_HOST: ${NIGHTLY_DATABASE_HOST:-nightly-database.wordpress.test}
    volumes:
      - "nightly-database-data:/var/lib/mysql"

  nightly-wordpress:
    container_name: "nightly-wordpress"
    depends_on:
      nginx:
        condition: service_started
      mailhog:
        condition: service_started
      nightly-database:
        condition: service_healthy
    build:
      context: "./containers/wordpress"
      args:
        - GID=${GID:-1000}
        - UID=${UID:-1000}
        - SEED_FILE=nightly-wordpress-seed.sh
    restart: always
    expose:
      - 80
    environment:
      ADMIN_USERNAME: admin
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin
      SITE_TITLE: nightly
      SITE_URL: ${NIGHTLY_HOST:-nightly.wordpress.test}
      VIRTUAL_HOST: ${NIGHTLY_HOST:-nightly.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-nightly-database
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
    volumes:
      - ~/.composer/auth.json:/var/www/.composer/auth.json:ro
      - "./wordpress-nightly:/var/www/html"
      - "./plugins:/var/www/html/wp-content/plugins"
      - "./xdebug:/var/xdebug"
      - "./config/php.ini:/usr/local/etc/php/conf.d/custom.ini"
    labels:
      - com.yoast.plugin-development-docker.mainwpinstance

volumes:
  basic-database-data:
  woocommerce-database-data:
  multisite-database-data:
  multisitedomain-database-data:
  standalone-database-data:
  nightly-database-data:


